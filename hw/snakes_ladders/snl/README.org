#+title: Serpientes y Escaleras a distancia
#+subtitle: Versión de sólo texto para Google Meet
#+options: toc:nil
#+language: es
#+latex_header: \usepackage[spanish]{babel}
#+latex_header: \usepackage[margin=1.5cm]{geometry}
#+latex_header: \usepackage{arev}
#+latex_header: \usepackage{minted}

* Planteamiento

Diseñar un pequeño ~CLI~ para el juego de serpientes y escaleras planteado
anteriormente.

** Diagramas de clases

#+begin_src mermaid :file imgs/mod_class.png
classDiagram
  class Board {
    -tuple~int,int~ dims
    -seq~Option:int~ traps
    +newBoard(dims,traps) Board
    +dims() tuple~int,int~
    +hasTrap(pos) bool
    +applyTrap(pos) Option~int~
  }

  class Player {
    -string name
    -int pos
    -tuple~int~ dims
    -Socket conn
    +newPlayer(name, dims, conn) Player
    +advance(steps)
    +isWinner() bool
  }

  class Mod {
    -Board b
    -Seq~Player~ players
    -int currPlayer
    -Rand dice
    -nextTurn()
    +newMod(port,seed, num, dims) Mod
    +waitForPlayers(port)
    +play()
  }

  Board --> Mod
  Player --> Mod
#+end_src


#+caption: Clases para el moderador
#+label: fig:mod-class
#+attr_latex: :scale 0.75
#+results:
[[file:imgs/mod_class.png]]

#+begin_src mermaid :file imgs/player_class.png
classDiagram
  class Player {
    -string name
    -Socket conn
    +newPlayer(name) Player
    +joinGame(port)
    +play()
  }
#+end_src

#+caption: Clases para el jugador
#+label: fig:player-class
#+attr_latex: :scale 0.75
#+results:
[[file:imgs/player_class.png]]


* Correr

#+begin_src bash :export code
nimble build
#+end_src

Que crea dos ejecutables. ~snlMod~ es el programa que para el moderador que
levante el servidor para jugar. ~snlPlay~ es el programa para los jugadore que
se conectarán al servidor del moderador.

* Pruebas

#+begin_src bash :export code
nimble test
#+end_src

Las pruebas están hechas con el paquete ~unittest~. De momento no hay pruebas
para los sockets.
